name: Create Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (e.g. v1.0.123)'
        required: true
        default: 'v1.0.0'
      release_body:
        description: 'Release description'
        required: false
        default: 'Automated release created after merging dev into master and building the project.'

jobs:
  merge_build_release:
    runs-on: ubuntu-latest
    steps:
      # Check out the master branch with full history.
      - name: Check out master branch
        uses: actions/checkout@v2
        with:
          ref: master
          fetch-depth: 0

      # Configure git user settings.
      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      # Update plugin.yml in the dev branch with the release version.
      - name: Update plugin.yml version in dev branch
        run: |
          git fetch origin dev
          git checkout dev
          # Replace the line that starts with "version:" with the new release version.
          sed -i "s/^version:.*/version: ${{ github.event.inputs.release_version }}/" src/main/resources/plugin.yml
          git commit -am "Update plugin version to ${{ github.event.inputs.release_version }}" || echo "No changes to commit"
          git push origin dev

      # Merge dev (with the updated plugin.yml) into master.
      - name: Merge dev into master
        run: |
          git checkout master
          git merge origin/dev --no-ff --commit -m "Merge branch 'dev' into master"

      # Push the merge commit back to master.
      - name: Push changes to master
        run: git push origin master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Build the project using Gradle.
      - name: Build project with Gradle
        run: gradle build

      # Create a GitHub release and attach the jar from build/libs.
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.release_version }}
          name: Release ${{ github.event.inputs.release_version }}
          body: ${{ github.event.inputs.release_body }}
          files: build/libs/*.jar
